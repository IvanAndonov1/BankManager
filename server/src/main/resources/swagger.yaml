openapi: 3.0.0
info:
  title: BankManager API
  description: MVP endpoints for Accounts and Loans
  contact:
    name: BankManager Team
    email: team@example.com
  version: v1
servers:
  - url: http://localhost:8080
    description: Local
paths:
  /api/employees/{id}:
    put:
      tags:
        - admin-employees-controller
      operationId: updateEmployeeByAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/employees/{id}/promote:
    put:
      tags:
        - admin-employees-controller
      operationId: promote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/employees/{id}/fire:
    put:
      tags:
        - admin-employees-controller
      operationId: fire
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/customers/{id}:
    put:
      tags:
        - staff-customers-controller
      operationId: updateCustomerByStaff
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/customers/me:
    put:
      tags:
        - customer-self-controller
      operationId: updateSelf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSelfRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/loans/applications:
    get:
      tags:
        - loan-controller
      operationId: listForStaff
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: customerId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: {}
    post:
      tags:
        - loan-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoanRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/loans/applications/{id}/decision:
    post:
      tags:
        - loan-controller
      operationId: decide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/cards:
    post:
      tags:
        - cards-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCardResponseDto'
  /api/cards/{publicId}/unblock:
    post:
      tags:
        - cards-controller
      operationId: unblock
      parameters:
        - name: publicId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/cards/{publicId}/reveal:
    post:
      tags:
        - cards-controller
      operationId: reveal
      parameters:
        - name: publicId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevealCardRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RevealCardResponseDto'
  /api/cards/{publicId}/block:
    post:
      tags:
        - cards-controller
      operationId: block
      parameters:
        - name: publicId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/auth/verify-reset-code:
    post:
      tags:
        - password-reset-controller
      operationId: verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/reset-password:
    post:
      tags:
        - password-reset-controller
      operationId: reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/register/employee:
    post:
      tags:
        - auth-controller
      operationId: registerEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterEmployeeRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegisterEmployeeResponseDto'
  /api/auth/register/customer:
    post:
      tags:
        - auth-controller
      operationId: registerCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/logout:
    post:
      tags:
        - auth-controller
      operationId: logout
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
  /api/auth/forgot-password:
    post:
      tags:
        - password-reset-controller
      operationId: forgot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/ai/generate:
    post:
      tags:
        - api-controller
      operationId: generate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/ai/chat:
    post:
      tags:
        - api-controller
      operationId: chat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/accounts:
    post:
      tags:
        - account-controller
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateAccountResponseDto'
  /api/accounts/{accountNumber}/withdraw:
    post:
      tags:
        - account-controller
      operationId: withdraw
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDto'
        required: true
      responses:
        '200':
          description: OK
  /api/accounts/{accountNumber}/transfer:
    post:
      tags:
        - account-controller
      operationId: transfer
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDto'
        required: true
      responses:
        '200':
          description: OK
  /api/accounts/{accountNumber}/deposit:
    post:
      tags:
        - account-controller
      operationId: deposit
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDto'
        required: true
      responses:
        '200':
          description: OK
  /api/v1/health:
    get:
      tags:
        - health-controller
      operationId: health
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/users/me:
    get:
      tags:
        - user-controller
      operationId: me
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/staff/analytics/overview:
    get:
      tags:
        - staff-analytics-controller
      operationId: overview
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
        - name: to
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OverviewDto'
  /api/staff/analytics/loans/disbursed/daily:
    get:
      tags:
        - staff-analytics-controller
      operationId: disbursedDaily
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
        - name: to
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisbursedPointDto'
  /api/staff/analytics/loans/decisions/daily:
    get:
      tags:
        - staff-analytics-controller
      operationId: loanDecisionsDaily
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
        - name: to
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanDecisionsPointDto'
  /api/staff/analytics/declines/top:
    get:
      tags:
        - staff-analytics-controller
      operationId: topDeclines
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
        - name: to
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValueCountDto'
  /api/staff/analytics/cashflow/daily:
    get:
      tags:
        - staff-analytics-controller
      operationId: cashflowDaily
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
        - name: to
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CashflowPointDto'
  /api/staff/analytics/ai/forecast:
    get:
      tags:
        - predictive-analytics-controller
      operationId: forecast
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MonthlyForecastDto'
  /api/loans/quote:
    get:
      tags:
        - loan-controller
      operationId: quote
      parameters:
        - name: requestedAmount
          in: query
          required: true
          schema:
            type: number
        - name: termMonths
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoanQuoteResponseDto'
  /api/loans/feedback/{id}:
    get:
      tags:
        - loan-feedback-controller
      operationId: getFeedback
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EvaluationWithFeedback'
  /api/loans/applications/{id}/evaluate:
    get:
      tags:
        - loan-controller
      operationId: evaluateApplication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EvaluationBreakdown'
  /api/loans/applications/mine:
    get:
      tags:
        - loan-controller
      operationId: myApplications
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplicationMineDto'
  /api/employees/by-username/{username}:
    get:
      tags:
        - directory-controller
      operationId: getEmployeeByUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeDto'
  /api/employees/by-id/{id}:
    get:
      tags:
        - directory-controller
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeDto'
  /api/employees/all:
    get:
      tags:
        - directory-controller
      operationId: employeesAll
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: active
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
  /api/customers/credits:
    get:
      tags:
        - staff-customers-controller
      operationId: listApprovedCredits
      parameters:
        - name: customerId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/customers/by-username/{username}:
    get:
      tags:
        - directory-controller
      operationId: getCustomerByUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
  /api/customers/by-id/{id}:
    get:
      tags:
        - directory-controller
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
  /api/customers/all:
    get:
      tags:
        - directory-controller
      operationId: customersAll
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: active
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'
  /api/cards/mine:
    get:
      tags:
        - cards-controller
      operationId: mine
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDto'
  /api/cards/by-account/{accountNumber}:
    get:
      tags:
        - cards-controller
      operationId: byAccount
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDto'
  /api/auth/debug/hash:
    get:
      tags:
        - auth-controller
      operationId: debugHash
      parameters:
        - name: pw
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/accounts/{accountNumber}:
    get:
      tags:
        - account-controller
      operationId: byAccountNumber
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/accounts/{accountNumber}/transactions:
    get:
      tags:
        - transactions-controller
      operationId: list
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'
  /api/accounts/me:
    get:
      tags:
        - account-controller
      operationId: myAccounts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
  /api/accounts/by-id/{id}:
    get:
      tags:
        - account-controller
      operationId: byId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/accounts/by-customer/{customerId}:
    get:
      tags:
        - account-controller
      operationId: byCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
components:
  schemas:
    UpdateEmployeeRequestDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        homeAddress:
          type: string
        active:
          type: boolean
        salary:
          type: number
    UpdateCustomerRequestDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        homeAddress:
          type: string
        active:
          type: boolean
    UpdateCustomerSelfRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        homeAddress:
          type: string
    CreateLoanRequestDto:
      type: object
      properties:
        requestedAmount:
          type: number
        termMonths:
          type: integer
          format: int32
        currentJobStartDate:
          type: string
          format: date
        netSalary:
          type: number
        targetAccountNumber:
          type: string
    DecisionRequestDto:
      type: object
      properties:
        approve:
          type: boolean
        reasons:
          type: array
          items:
            type: string
    CreateCardRequestDto:
      type: object
      properties:
        accountNumber:
          type: string
        holderName:
          type: string
        type:
          type: string
    CreateCardResponseDto:
      type: object
      properties:
        maskedNumber:
          type: string
        last4:
          type: string
        type:
          type: string
        expiration:
          type: string
        accountNumber:
          type: string
    RevealCardRequestDto:
      type: object
      properties:
        password:
          type: string
    RevealCardResponseDto:
      type: object
      properties:
        cardNumber:
          type: string
        holderName:
          type: string
        expiration:
          type: string
        cvv:
          type: string
    RegisterEmployeeRequestDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date
        phoneNumber:
          type: string
        homeAddress:
          type: string
        egn:
          type: string
        salary:
          type: number
    RegisterEmployeeResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        role:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        phoneNumber:
          type: string
        homeAddress:
          type: string
        egn:
          type: string
        salary:
          type: number
    RegisterRequestDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date
        phoneNumber:
          type: string
        homeAddress:
          type: string
        egn:
          type: string
    LoginRequestDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthLoginResponse:
      type: object
      properties:
        username:
          type: string
        role:
          type: string
        token:
          type: string
    CreateAccountRequestDto:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
    CreateAccountResponseDto:
      type: object
      properties:
        accountNumber:
          type: string
        balance:
          type: number
    TransactionRequestDto:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
    TransferRequestDto:
      type: object
      properties:
        toAccountNumber:
          type: string
        amount:
          type: number
        description:
          type: string
    LoanKpi:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        approved:
          type: integer
          format: int32
        declined:
          type: integer
          format: int32
        approvalRate:
          type: number
          format: double
        disbursedAmount:
          type: number
        avgTicket:
          type: number
        openPendingNow:
          type: integer
          format: int32
    OverviewDto:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/PeriodDto'
        aum:
          type: number
        inflow:
          type: number
        outflow:
          type: number
        netFlow:
          type: number
        newAccounts:
          type: integer
          format: int32
        activeCustomers:
          type: integer
          format: int32
        loans:
          $ref: '#/components/schemas/LoanKpi'
        riskProxy:
          $ref: '#/components/schemas/RiskProxy'
    PeriodDto:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    RiskProxy:
      type: object
      properties:
        latePayers30dShare:
          type: number
          format: double
        latePayers90dShare:
          type: number
          format: double
    DisbursedPointDto:
      type: object
      properties:
        day:
          type: string
        disbursedCount:
          type: integer
          format: int32
        disbursedAmount:
          type: number
    LoanDecisionsPointDto:
      type: object
      properties:
        day:
          type: string
        created:
          type: integer
          format: int32
        approved:
          type: integer
          format: int32
        declined:
          type: integer
          format: int32
    KeyValueCountDto:
      type: object
      properties:
        key:
          type: string
        count:
          type: integer
          format: int64
    CashflowPointDto:
      type: object
      properties:
        day:
          type: string
        inflow:
          type: number
        outflow:
          type: number
        net:
          type: number
    MonthlyForecastDto:
      type: object
      properties:
        periodFrom:
          type: string
        periodTo:
          type: string
        inflow:
          type: number
        outflow:
          type: number
        net:
          type: number
        loansCreated:
          type: integer
          format: int32
        loansApproved:
          type: integer
          format: int32
        loansDeclined:
          type: integer
          format: int32
        disbursedAmount:
          type: number
        confidence:
          type: number
          format: double
        analysis:
          type: string
    LoanQuoteResponseDto:
      type: object
      properties:
        currency:
          type: string
        annualRate:
          type: number
        monthlyPayment:
          type: number
        totalPayable:
          type: number
        requestedAmount:
          type: number
        termMonths:
          type: integer
          format: int32
    EvaluationBreakdown:
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - DECLINED
        reasons:
          type: array
          items:
            type: string
        tenureScore:
          type: integer
          format: int32
        dtiScore:
          type: integer
          format: int32
        accountAgeScore:
          type: integer
          format: int32
        cushionScore:
          type: integer
          format: int32
        recentDebtScore:
          type: integer
          format: int32
        composite:
          type: integer
          format: int32
        accumulatedPoints:
          type: integer
          format: int32
        maxPossiblePoints:
          type: integer
          format: int32
        percentageOfMax:
          type: number
          format: double
        creditScore:
          type: string
        recommendation:
          type: string
          enum:
            - APPROVE
            - CONSIDER
            - DECLINE
    EvaluationWithFeedback:
      type: object
      properties:
        breakdown:
          $ref: '#/components/schemas/EvaluationBreakdown'
        feedback:
          type: string
    EvaluationView:
      type: object
      properties:
        percentageOfMax:
          type: number
          format: double
        maxPossiblePoints:
          type: integer
          format: int32
        creditScore:
          type: string
        scores:
          $ref: '#/components/schemas/Scores'
        accumulatedPoints:
          type: integer
          format: int32
    LoanApplicationMineDto:
      type: object
      properties:
        requestedAmount:
          type: number
        termMonths:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - DECLINED
        reasons:
          type: array
          items:
            type: string
        currency:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        evaluation:
          $ref: '#/components/schemas/EvaluationView'
    Scores:
      type: object
      properties:
        cushion:
          type: integer
          format: int32
        tenure:
          type: integer
          format: int32
        dti:
          type: integer
          format: int32
        recentDebt:
          type: integer
          format: int32
        accountAge:
          type: integer
          format: int32
    EmployeeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date
        phoneNumber:
          type: string
        homeAddress:
          type: string
        egn:
          type: string
        role:
          type: string
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        salary:
          type: number
    AccountDto:
      type: object
      properties:
        accountNumber:
          type: string
        balance:
          type: number
    CustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date
        phoneNumber:
          type: string
        homeAddress:
          type: string
        egn:
          type: string
        role:
          type: string
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDto'
    CardDto:
      type: object
      properties:
        publicId:
          type: string
        maskedNumber:
          type: string
        last4:
          type: string
        type:
          type: string
        status:
          type: string
        expiration:
          type: string
        primary:
          type: boolean
        accountNumber:
          type: string
    TransactionDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
        type:
          type: string
        amount:
          type: number
        dateTime:
          type: string
        description:
          type: string
        cardType:
          type: string
